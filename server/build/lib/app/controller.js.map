{"version":3,"sources":["../../../src/lib/app/controller.js"],"names":["findAll","req","res","next","query","result","json","recordById","params","id","insert","name","body","trim","title","desc","url","type","parseInt","icon","cover","createdByID","user","console","log"],"mappings":"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","file":"controller.js","sourcesContent":["import appManager from './manager'\nimport { getFromReq } from '../util/pagination'\nimport { formatResult, handlerCustomError } from '../util/format'\nimport { APP_LIMIT_DEFAULT } from '../util/const'\n\nconst findAll = async (req, res, next) => {\n  try {\n    const result = await appManager.findAll(getFromReq(req.query, APP_LIMIT_DEFAULT))\n    res.json(formatResult(result))\n  } catch (e) {\n    next(handlerCustomError(107001, '查询失败'))\n  }\n}\n\nconst recordById = async (req, res, next) => {\n  try {\n    const result = await appManager.recordById(req.params.id)\n    res.json(formatResult({}))\n  } catch (e) {\n    next(handlerCustomError(107002, '记录失败'))\n  }\n}\n\nconst insert = async (req, res, next) => {\n  const name = (req.body.name || '').trim()\n  const title = (req.body.title || '').trim()\n  const desc = (req.body.desc || '').trim()\n  const url = (req.body.url || '').trim()\n  const type = parseInt(req.body.type) || 0\n  const icon = (req.body.icon || '').trim()\n  const cover = (req.body.cover || '').trim()\n\n  const createdByID = req.user.id\n  if (!name) {\n    next(handlerCustomError(107005, '名称不能为空'))\n  }\n  if (!title) {\n    next(handlerCustomError(107006, '标题不能为空'))\n  }\n  if (!url) {\n    next(handlerCustomError(107007, '外链不能为空'))\n  }\n  if (!icon) {\n    next(handlerCustomError(107008, '请上传图标'))\n  }\n  if (!cover) {\n    next(handlerCustomError(107009, '请上传封面'))\n  }\n  if (!createdByID) {\n    next(handlerCustomError(107010, '非法用户操作'))\n  }\n  try {\n    const result = await appManager.insert({ name, title, desc, url, icon, type, cover, createdByID })\n    res.json(formatResult())\n  } catch (e) {\n    console.log(e)\n    next(handlerCustomError(107003, '创建失败'))\n  }\n}\n\nexport default {\n  findAll,\n  recordById,\n  insert\n}\n"]}