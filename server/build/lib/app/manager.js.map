{"version":3,"sources":["../../../src/lib/app/manager.js"],"names":["insert","options","create","result","getById","id","findById","updateById","analyse","updatedAt","Date","now","save","removeById","removed","findAll","queryOptions","count","total","find","limit","skip","offset","list","meta","length"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA;AAAA,sFAAS;AAAA,QAAOC,OAAP,uEAAiB,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,gBAAMC,MAAN,CAAa,sBAAc,EAAd,EAAkBD,OAAlB,CAAb,CADR;;AAAA;AACPE,kBADO;AAAA,6CAENA,MAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAT;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAKA,IAAMC;AAAA,uFAAU,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACO,gBAAMC,QAAN,CAAeD,EAAf,CADP;;AAAA;AACRF,kBADQ;AAAA,8CAEPA,MAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAKA,IAAMI;AAAA,uFAAa,kBAAOF,EAAP;AAAA,QAAWJ,OAAX,uEAAqB,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACG,gBAAMK,QAAN,CAAeD,EAAf,CADH;;AAAA;AACbG,mBADa;;AAAA,gBAEZA,OAFY;AAAA;AAAA;AAAA;;AAAA,8CAGR,IAHQ;;AAAA;AAKjBA,sBAAU,sBAAc,EAAd,EAAkBP,OAAlB,EAA2BO,OAA3B,CAAV;AACAA,oBAAQC,SAAR,GAAoBC,KAAKC,GAAL,EAApB;AANiB;AAAA,mBAOIH,QAAQI,IAAR,EAPJ;;AAAA;AAOXT,kBAPW;AAAA,8CAQVA,MARU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAWA,IAAMU;AAAA,uFAAa,kBAAOR,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACG,gBAAMC,QAAN,CAAeD,EAAf,CADH;;AAAA;AACbG,mBADa;;AAAA,gBAEZA,OAFY;AAAA;AAAA;AAAA;;AAAA,8CAGR,IAHQ;;AAAA;AAKjBA,oBAAQM,OAAR,GAAkB,IAAlB;AACAN,oBAAQC,SAAR,GAAoBC,KAAKC,GAAL,EAApB;AANiB;AAAA,mBAOIH,QAAQI,IAAR,EAPJ;;AAAA;AAOXT,kBAPW;AAAA,8CAQVA,MARU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAWA,IAAMY;AAAA,uFAAU;AAAA,QAAOC,YAAP,uEAAsB,EAAtB;AAAA,QAA0Bf,OAA1B,uEAAoC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACM,gBAAMgB,KAAN,CAAY,EAAEH,SAAS,KAAX,EAAZ,CADN;;AAAA;AACRI,iBADQ;AAAA;AAAA,mBAEK,gBAAMC,IAAN,CAAWlB,OAAX,EAAoBmB,KAApB,CAA0BJ,aAAaI,KAAvC,EAA8CC,IAA9C,CAAmDL,aAAaM,MAAhE,CAFL;;AAAA;AAERC,gBAFQ;AAAA,8CAGP;AACLC,oBAAM,yBAAQN,KAAR,EAAeK,KAAKE,MAApB,EAA4BT,YAA5B,CADD;AAELO;AAFK,aAHO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBASe;AACbR,kBADa;AAEbX,kBAFa;AAGbJ,gBAHa;AAIbO,wBAJa;AAKbM;AALa,C","file":"manager.js","sourcesContent":["import Model from './model'\nimport { getMeta } from '../util/pagination'\n\nconst insert = async (options = {}) => {\n  const result = await Model.create(Object.assign({}, options))\n  return result\n}\n\nconst getById = async (id) => {\n  const result = await Model.findById(id)\n  return result\n}\n\nconst updateById = async (id, options = {}) => {\n  let analyse = await Model.findById(id)\n  if (!analyse) {\n    return null\n  }\n  analyse = Object.assign({}, options, analyse)\n  analyse.updatedAt = Date.now()\n  const result = await analyse.save()\n  return result\n}\n\nconst removeById = async (id) => {\n  let analyse = await Model.findById(id)\n  if (!analyse) {\n    return null\n  }\n  analyse.removed = true\n  analyse.updatedAt = Date.now()\n  const result = await analyse.save()\n  return result\n}\n\nconst findAll = async (queryOptions = {}, options = {}) => {\n  const total = await Model.count({ removed: false })\n  const list = await Model.find(options).limit(queryOptions.limit).skip(queryOptions.offset)\n  return {\n    meta: getMeta(total, list.length, queryOptions),\n    list\n  }\n}\n\nexport default {\n  findAll,\n  getById,\n  insert,\n  updateById,\n  removeById\n}\n"]}