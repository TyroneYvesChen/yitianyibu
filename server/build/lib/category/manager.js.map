{"version":3,"sources":["../../../src/lib/category/manager.js"],"names":["findAll","queryOptions","options","count","removed","total","find","limit","skip","offset","sort","weight","list","meta","length","getById","id","findById","result","getByPathname","pathname","findOne"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA;AAAA,sFAAU;AAAA,QAAOC,YAAP,uEAAsB,EAAtB;AAAA,QAA0BC,OAA1B,uEAAoC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACM,gBAAMC,KAAN,CAAY,EAAEC,SAAS,KAAX,EAAZ,CADN;;AAAA;AACRC,iBADQ;;AAEdH,sBAAU,sBAAcA,OAAd,EAAuB,EAAEE,SAAS,KAAX,EAAvB,CAAV;AAFc;AAAA,mBAGK,gBAAME,IAAN,CAAWJ,OAAX,EAAoBK,KAApB,CAA0BN,aAAaM,KAAvC,EAA8CC,IAA9C,CAAmDP,aAAaQ,MAAhE,EAAwEC,IAAxE,CAA6E,EAAEC,QAAQ,CAAC,CAAX,EAA7E,CAHL;;AAAA;AAGRC,gBAHQ;AAAA,6CAIP;AACLC,oBAAM,yBAAQR,KAAR,EAAeO,KAAKE,MAApB,EAA4Bb,YAA5B,CADD;AAELW;AAFK,aAJO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAUA,IAAMG;AAAA,uFAAU,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACO,gBAAMC,QAAN,CAAeD,EAAf,CADP;;AAAA;AACRE,kBADQ;AAAA,8CAEPA,MAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAKA,IAAMC;AAAA,uFAAgB,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACC,gBAAMC,OAAN,CAAc,EAAED,kBAAF,EAAd,CADD;;AAAA;AACdF,kBADc;AAAA,8CAEbA,MAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAKe;AACblB,kBADa;AAEbe,kBAFa;AAGbI;AAHa,C","file":"manager.js","sourcesContent":["import Model from './model'\nimport { getMeta } from '../util/pagination'\n\nconst findAll = async (queryOptions = {}, options = {}) => {\n  const total = await Model.count({ removed: false })\n  options = Object.assign(options, { removed: false })\n  const list = await Model.find(options).limit(queryOptions.limit).skip(queryOptions.offset).sort({ weight: -1 })\n  return {\n    meta: getMeta(total, list.length, queryOptions),\n    list\n  }\n}\n\nconst getById = async (id) => {\n  const result = await Model.findById(id)\n  return result\n}\n\nconst getByPathname = async (pathname) => {\n  const result = await Model.findOne({ pathname })\n  return result\n}\n\nexport default {\n  findAll,\n  getById,\n  getByPathname\n}\n"]}