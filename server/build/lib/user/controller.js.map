{"version":3,"sources":["../../../src/lib/user/controller.js"],"names":["login","req","res","next","email","body","password","getUserByEmail","result","console","log","payload","id","_id","json","token","encode"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA;AAAA,sFAAQ,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,iBADM,GACEH,IAAII,IAAJ,CAASD,KAAT,IAAkB,EADpB;AAENE,oBAFM,GAEKL,IAAII,IAAJ,CAASC,QAAT,IAAqB,EAF1B;;AAGZ,gBAAI,CAACF,KAAL,EAAY;AACVD,mBAAK,gCAAmB,MAAnB,EAA2B,OAA3B,CAAL;AACD;AACD,gBAAI,CAACG,QAAL,EAAe;AACbH,mBAAK,gCAAmB,MAAnB,EAA2B,OAA3B,CAAL;AACD;AARW;AAAA;AAAA,mBAUW,kBAAYI,cAAZ,CAA2BH,KAA3B,CAVX;;AAAA;AAUJI,kBAVI;;AAWVC,oBAAQC,GAAR,CAAYF,MAAZ;AACAC,oBAAQC,GAAR,CAAY,kBAAOJ,QAAP,CAAZ;AACAG,oBAAQC,GAAR,CAAYF,OAAOF,QAAnB;AACA,gBAAI,CAACE,MAAL,EAAa;AACXL,mBAAK,gCAAmB,MAAnB,EAA2B,OAA3B,CAAL;AACD,aAFD,MAEO,IAAI,kBAAOG,QAAP,MAAqBE,OAAOF,QAAhC,EAA0C;AAC/CH,mBAAK,gCAAmB,MAAnB,EAA2B,OAA3B,CAAL;AACD,aAFM,MAEA;AACCQ,qBADD,GACW,EAAEC,IAAIJ,OAAOK,GAAb,EADX;;AAELX,kBAAIY,IAAJ,CAAS,0BAAa,EAAEC,OAAO,oBAAIC,MAAJ,CAAWL,OAAX,qBAAT,EAAb,CAAT;AACD;AArBS;AAAA;;AAAA;AAAA;AAAA;;AAuBVR,iBAAK,gCAAmB,MAAnB,EAA2B,MAA3B,CAAL;;AAvBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAR;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBA2Be;AACbH;AADa,C","file":"controller.js","sourcesContent":["import jwt from \"jwt-simple\"\n\nimport userManager from './manager'\nimport { getMD5 } from '../util/tool'\nimport { formatResult, handlerCustomError } from '../util/format'\nimport { JWT_SECRET } from '../../config'\n\nconst login = async (req, res, next) => {\n  const email = req.body.email || ''\n  const password = req.body.password || ''\n  if (!email) {\n    next(handlerCustomError(101001, '请输入账号'))\n  }\n  if (!password) {\n    next(handlerCustomError(101002, '请输入密码'))\n  }\n  try {\n    const result = await userManager.getUserByEmail(email)\n    console.log(result)\n    console.log(getMD5(password))\n    console.log(result.password)\n    if (!result) {\n      next(handlerCustomError(101003, '用户不存在'))\n    } else if (getMD5(password) !== result.password) {\n      next(handlerCustomError(101004, '密码不正确'))\n    } else {\n      const payload = { id: result._id }\n      res.json(formatResult({ token: jwt.encode(payload, JWT_SECRET) }))\n    }\n  } catch (e) {\n    next(handlerCustomError(101000, '登录失败'))\n  }\n}\n\nexport default {\n  login\n}\n"]}