{"version":3,"sources":["../../../src/lib/user/manager.js"],"names":["insert","options","create","result","getUserByEmail","email","findOne","getResult","getUserById","id","findById","initUser","username","password","console","log","findResult","initResult"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,IAAMA;AAAA,sFAAS;AAAA,QAAOC,OAAP,uEAAiB,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,gBAAMC,MAAN,CAAaD,OAAb,CADR;;AAAA;AACPE,kBADO;AAAA,6CAENA,MAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAT;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAKA,IAAMC;AAAA,uFAAiB,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACK,gBAAMC,OAAN,CAAc,EAAED,YAAF,EAAd,CADL;;AAAA;AACbE,qBADa;AAAA,8CAEZA,SAFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAKA,IAAMC;AAAA,uFAAc,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,gBAAMC,QAAN,CAAeD,EAAf,CADR;;AAAA;AACVF,qBADU;AAAA,8CAETA,SAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAKA,IAAMI;AAAA,uFAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACTV,mBADS,GACC;AACdW,8CADc;AAEdC,8CAFc;AAGdR;AAHc,aADD;;AAMfS,oBAAQC,GAAR;AANe;AAAA,mBAOUX,eAAeH,QAAQI,KAAvB,CAPV;;AAAA;AAOTW,sBAPS;;AAAA,iBAQXA,UARW;AAAA;AAAA;AAAA;;AASb;AACAF,oBAAQC,GAAR;AAVa,8CAWN,IAXM;;AAAA;AAafD,oBAAQC,GAAR;AACAd,oBAAQY,QAAR,GAAmB,kBAAOZ,QAAQY,QAAf,CAAnB;AAde;AAAA,mBAeUb,OAAOC,OAAP,CAfV;;AAAA;AAeTgB,sBAfS;;AAgBfH,oBAAQC,GAAR,CAAY,YAAZ;AAhBe,8CAiBR,IAjBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAoBe;AACbX,gCADa;AAEbI,0BAFa;AAGbG;AAHa,C","file":"manager.js","sourcesContent":["import Model from './model'\nimport { ADMIN_USERNAME, ADMIN_PASSWORD, ADMIN_EMAIL } from '../../config'\nimport { getMD5 } from '../util/tool'\n\nconst insert = async (options = {}) => {\n  const result = await Model.create(options)\n  return result\n}\n\nconst getUserByEmail = async (email) => {\n    const getResult = await Model.findOne({ email })\n    return getResult\n}\n\nconst getUserById = async (id) => {\n    const getResult = await Model.findById(id)\n    return getResult\n}\n\nconst initUser = async () => {\n  const options = {\n    username: ADMIN_USERNAME,\n    password: ADMIN_PASSWORD,\n    email   : ADMIN_EMAIL\n  }\n  console.log(`检查管理员初始化 管理员账户 [${ADMIN_EMAIL}]`)\n  const findResult = await getUserByEmail(options.email)\n  if (findResult) {\n    // 管理员账户已存在\n    console.log(`管理员账户已存在 管理员账户 [${ADMIN_EMAIL}]`)\n    return null\n  }\n  console.log(`管理员账户不存在 开始初始化 管理员账户 [${ADMIN_EMAIL}]`)\n  options.password = getMD5(options.password)\n  const initResult = await insert(options)\n  console.log('管理员账户初始化结束')\n  return null\n}\n\nexport default {\n  getUserByEmail,\n  getUserById,\n  initUser\n}\n"]}