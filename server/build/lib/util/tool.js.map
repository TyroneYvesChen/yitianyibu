{"version":3,"sources":["../../../src/lib/util/tool.js"],"names":["getClientIp","req","headers","connection","remoteAddress","socket","getMD5","str","result","md5","createHash","update","digest"],"mappings":";;;;;;;AAAA;;;;;;AAEA,IAAMA,cAAc,SAAdA,WAAc,CAACC,GAAD,EAAS;AAC3B,SAAOA,IAAIC,OAAJ,CAAa,iBAAb,KACLD,IAAIE,UAAJ,CAAeC,aADV,IAELH,IAAII,MAAJ,CAAWD,aAFN,IAGLH,IAAIE,UAAJ,CAAeE,MAAf,CAAsBD,aAHxB;AAID,CALD;;AAOA,IAAME,SAAS,SAATA,MAAS,CAACC,GAAD,EAAS;AACtB,MAAIC,SAAS,EAAb;AACA,MAAMC,MAAM,iBAAOC,UAAP,CAAkB,KAAlB,CAAZ;AACAF,WAASC,IAAIE,MAAJ,CAAWJ,GAAX,EAAgBK,MAAhB,CAAuB,KAAvB,CAAT;AACA,SAAOJ,MAAP;AACD,CALD;;QAQER,W,GAAAA,W;QACAM,M,GAAAA,M","file":"tool.js","sourcesContent":["import crypto from 'crypto'\n\nconst getClientIp = (req) => {\n  return req.headers[ 'x-forwarded-for' ] ||\n    req.connection.remoteAddress ||\n    req.socket.remoteAddress ||\n    req.connection.socket.remoteAddress\n}\n\nconst getMD5 = (str) => {\n  let result = ''\n  const md5 = crypto.createHash('md5')\n  result = md5.update(str).digest('hex')\n  return result\n}\n\nexport {\n  getClientIp,\n  getMD5\n}\n"]}