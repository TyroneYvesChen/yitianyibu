{"version":3,"sources":["../../src/middleware/auth.js"],"names":["auth","app","params","secretOrKey","jwtFromRequest","fromAuthHeaderWithScheme","console","log","strategy","payload","next","getUserById","id","then","user","_id","email","catch","error","use","initialize","authenticate","session"],"mappings":";;;;;;AAAA;;;;AACA;;AAEA;;;;AACA;;;;AAEA,IAAMA,OAAO,SAAPA,IAAO,CAACC,GAAD,EAAS;AACpB,MAAMC,SAAS;AACbC,mCADa;AAEbC,oBAAgB,wBAAWC,wBAAX,CAAoC,QAApC;AAFH,GAAf;AAIAC,UAAQC,GAAR,CAAY,QAAZ,EAAsBL,MAAtB;AACA,MAAMM,WAAW,0BAAaN,MAAb,EAAqB,UAACO,OAAD,EAAUC,IAAV,EAAmB;AACvDJ,YAAQC,GAAR,CAAY,SAAZ,EAAuBE,OAAvB;AACA,sBAAYE,WAAZ,CAAwBF,QAAQG,EAAhC,EACGC,IADH,CACQ,gBAAQ;AACZP,cAAQC,GAAR,CAAY,UAAZ,EAAwBO,IAAxB;AACA,UAAIA,IAAJ,EAAU;AACRR,gBAAQC,GAAR,CAAYO,IAAZ;AACA,eAAOJ,KAAK,IAAL,EAAW;AAChBE,cAAIE,KAAKC,GADO;AAEhBC,iBAAOF,KAAKE;AAFI,SAAX,CAAP;AAID;AACD,aAAON,KAAK,IAAL,EAAW,IAAX,CAAP;AACD,KAXH,EAYGO,KAZH,CAYS;AAAA,aAASP,KAAKQ,KAAL,EAAY,IAAZ,CAAT;AAAA,KAZT;AAaD,GAfgB,CAAjB;AAgBA,qBAASC,GAAT,CAAaX,QAAb;AACA,SAAO;AACLY,gBAAY,sBAAM;AAChB,aAAO,mBAASA,UAAT,EAAP;AACD,KAHI;AAILC,kBAAc,wBAAM;AAClBf,cAAQC,GAAR,CAAY,cAAZ;AACA,aAAO,mBAASc,YAAT,CAAsB,KAAtB,EAA6B,EAAEC,SAAS,KAAX,EAA7B,CAAP;AACD;AAPI,GAAP;AASD,CAhCD;;kBAkCetB,I","file":"auth.js","sourcesContent":["import passport from 'passport'\nimport { Strategy, ExtractJwt } from 'passport-jwt'\n\nimport userManager from '../lib/user/manager'\nimport { JWT_SECRET } from '../config'\n\nconst auth = (app) => {\n  const params = {\n    secretOrKey: JWT_SECRET,\n    jwtFromRequest: ExtractJwt.fromAuthHeaderWithScheme('Bearer')\n  }\n  console.log('params', params)\n  const strategy = new Strategy(params, (payload, next) => {\n    console.log('payload', payload)\n    userManager.getUserById(payload.id)\n      .then(user => {\n        console.log('strategy', user)\n        if (user) {\n          console.log(user)\n          return next(null, {\n            id: user._id,\n            email: user.email\n          })\n        }\n        return next(null, null)\n      })\n      .catch(error => next(error, null))\n  })\n  passport.use(strategy)\n  return {\n    initialize: () => {\n      return passport.initialize()\n    },\n    authenticate: () => {\n      console.log('authenticate')\n      return passport.authenticate('jwt', { session: false })\n    }\n  }\n}\n\nexport default auth\n"]}